{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["data","id","SKU","nombre","descripcionCorta","descripcion","imagenes","categoria","precio","marca","numeroDeParte","familia","motor","proveedor","estatus","App","state","modalActualizar","modalInsertar","form","mostrarModalActualizar","dato","setState","cerrarModalActualizar","mostrarModalInsertar","cerrarModalInsertar","editar","contador","arreglo","map","registro","eliminar","window","confirm","splice","insertar","valorNuevo","length","lista","push","handleChange","e","target","name","value","Navbar","color","light","NavbarBrand","href","className","Nav","navbar","NavItem","src","width","NavLink","Container","Button","onClick","Table","this","key","Modal","isOpen","ModalHeader","ModalBody","FormGroup","readOnly","type","onChange","ModalFooter","React","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.841e741a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Table,\n  Button,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  ModalFooter,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\n\n//datos predeterminados\nconst data = [\n  {\n    id: \"1\",\n    SKU: \"FKC-619084667\",\n    nombre: \"CLUTCH NISSAN TSURU III\",\n    descripcionCorta: \"KIT CLUTCH NISSAN TSURU III\",\n    descripcion: \"KIT CLUTCH NISSAN TSURU III 92-17 TSUBAME 93-04 SENTRA\",\n    imagenes: \"\",\n    categoria: \"Motor\",\n    precio: \"$980\",\n    marca: \"LUK\",\n    numeroDeParte: \"9845631\",\n    familia: \"sedán\",\n    motor: \"4cl 1.6lts\",\n    proveedor: \"OSRAM\",\n    estatus: \"disponible\",\n  },\n  {\n    id: \"2\",\n    SKU: \"MRA-80064\",\n    nombre: \"Manguera linea de gasolina\",\n    descripcionCorta: \"MANGUERA LINEA DE GASOLINA 3/8 9.5MM\",\n    descripcion: \"MANGUERA LINEA DE GASOLINA 3/8 9.5MM 15.24M ROLL (600IN)\",\n    imagenes: \"\",\n    categoria: \"Accesorios\",\n    precio: \"$58\",\n    marca: \"DAYKO\",\n    numeroDeParte: \"1354946\",\n    familia: \"sedán\",\n    motor: \"1.6\",\n    proveedor: \"Valeo\",\n    estatus: \"disponible\",\n  }         \n];\n\nclass App extends React.Component {\n\n  //estados iniciales\n  state = {\n    data: data,\n    modalActualizar: false,\n    modalInsertar: false,\n    form: {\n      id: \"\",\n      SKU: \"\",\n      nombre: \"\",\n      descripcionCorta: \"\",\n      descripcion: \"\",\n      imagenes: \"\",\n      categoria: \"\",\n      precio: \"\",\n      marca: \"\",\n      numeroDeParte: \"\",\n      familia: \"\",\n      motor: \"\",\n      proveedor: \"\",\n      estatus: \"\",\n    },\n  };\n\n \n  mostrarModalActualizar = (dato) => {\n    this.setState({\n      form: dato,\n      modalActualizar: true,\n    });\n  };\n\n  cerrarModalActualizar = () => {\n    this.setState({ modalActualizar: false });\n  };\n\n  mostrarModalInsertar = () => {\n    this.setState({\n      modalInsertar: true,\n    });\n  };\n\n  cerrarModalInsertar = () => {\n    this.setState({ modalInsertar: false });\n  };\n\n  editar = (dato) => {\n    var contador = 0;\n    var arreglo = this.state.data;\n    arreglo.map((registro) => {\n      if (dato.id == registro.id) {\n        arreglo[contador].SKU = dato.SKU;\n        arreglo[contador].nombre = dato.nombre;\n        arreglo[contador].descripcionCorta = dato.descripcionCorta;\n        arreglo[contador].descripcion = dato.descripcion;\n        arreglo[contador].imagenes = dato.imagenes;\n        arreglo[contador].categoria = dato.categoria;\n        arreglo[contador].precio = dato.precio;\n        arreglo[contador].marca = dato.marca;\n        arreglo[contador].numeroDeParte = dato.numeroDeParte;\n        arreglo[contador].familia = dato.familia;\n        arreglo[contador].motor = dato.motor;\n        arreglo[contador].proveedor = dato.proveedor;\n        arreglo[contador].estatus = dato.estatus;\n      }\n      contador++;\n    });\n    this.setState({ data: arreglo, modalActualizar: false });\n  };\n\n  eliminar = (dato) => {\n    var opcion = window.confirm(\"Estás Seguro que deseas Eliminar el elemento \"+dato.id);\n    if (opcion == true) {\n      var contador = 0;\n      var arreglo = this.state.data;\n      arreglo.map((registro) => {\n        if (dato.id == registro.id) {\n          arreglo.splice(contador, 1);\n        }\n        contador++;\n      });\n      this.setState({ data: arreglo, modalActualizar: false });\n    }\n  };\n\n  insertar= ()=>{\n    var valorNuevo= {...this.state.form};\n    valorNuevo.id=this.state.data.length+1;\n    var lista= this.state.data;\n    lista.push(valorNuevo);\n    this.setState({ modalInsertar: false, data: lista });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  render() {\n    \n    return (\n      <>\n\n        <Navbar color=\"info\" light>\n          <NavbarBrand href=\"https://www.anconaautopartes.com/\" className=\"mr-auto\">Ancona autopartes</NavbarBrand>\n            <Nav navbar>\n              <NavItem>\n                <img src=\"https://seeklogo.com/images/R/refaccionaria-ancona-autopartes-logo-FFE87BCB6D-seeklogo.com.png\" width={\"50em\"}></img>\n                <NavLink href=\"https://github.com/sergio-adame\">GitHub</NavLink>\n              </NavItem>\n            </Nav>\n        </Navbar>\n\n        <Container>\n        <br />\n          <Button color=\"success\" onClick={()=>this.mostrarModalInsertar()}>Añadir Pieza</Button>\n          <br />\n          <br />\n          <Table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>SKU</th>\n                <th>Nombre</th>\n                <th>Descripción Corta</th>\n                <th>Descripción</th>\n                <th>Imágenes</th>\n                <th>Categoria</th>\n                <th>Precio</th>\n                <th>Marca</th>\n                <th>Número De Parte</th>\n                <th>Familia</th>\n                <th>Motor</th>\n                <th>Proveedor</th>\n                <th>Estatus</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.data.map((dato) => (\n                <tr key={dato.id}>\n                  <td>{dato.id}</td>\n                  <td>{dato.SKU}</td>\n                  <td>{dato.nombre}</td>\n                  <td>{dato.descripcionCorta}</td>\n                  <td>{dato.descripcion}</td>\n                  <td><img src=\"{dato.imagenes}\"></img></td>\n                  <td>{dato.categoria}</td>\n                  <td>{dato.precio}</td>\n                  <td>{dato.marca}</td>\n                  <td>{dato.numeroDeParte}</td>\n                  <td>{dato.familia}</td>\n                  <td>{dato.motor}</td>\n                  <td>{dato.proveedor}</td>\n                  <td>{dato.estatus}</td>\n\n\n                  <td>\n                    <Button color=\"primary\" onClick={() => this.mostrarModalActualizar(dato)} >Editar</Button>{\" \"}\n                    <Button className=\"mt-2\" color=\"danger\" onClick={()=> this.eliminar(dato)}>Eliminar</Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n\n        <Modal isOpen={this.state.modalActualizar}>\n          <ModalHeader>\n           <div><h3>Modificar datos de pieza</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n               ID:\n              </label>\n            \n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.form.id}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                SKU: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"SKU\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.SKU}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Nombre: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"nombre\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.nombre}\n              />\n            </FormGroup>\n            \n\n            <FormGroup>\n              <label>\n                Descripción Corta: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"descripcionCorta\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.descripcionCorta}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Descripción: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"descripcion\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.descripcion}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Imágenes: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"imagenes\"\n                type=\"file\"\n                onChange={this.handleChange}\n                value={this.state.form.imagenes}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Categoria: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"categoria\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.categoria}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Precio: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"precio\"\n                type=\"number\"\n                onChange={this.handleChange}\n                value={this.state.form.precio}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Marca: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"marca\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.marca}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Número De Parte: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"numeroDeParte\"\n                type=\"number\"\n                onChange={this.handleChange}\n                value={this.state.form.numeroDeParte}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Familia: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"familia\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.familia}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Motor: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"motor\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.motor}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Proveedor: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"proveedor\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.proveedor}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Estatus: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"estatus\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.estatus}\n              />\n            </FormGroup>\n\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.editar(this.state.form)}\n            >\n              Editar\n            </Button>\n            <Button\n              color=\"danger\"\n              onClick={() => this.cerrarModalActualizar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n\n\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader>\n           <div><h3>Insertar Pieza</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n                ID: \n              </label>\n              \n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.data.length+1}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                SKU: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"SKU\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Nombre: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"nombre\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            \n\n            <FormGroup>\n              <label>\n                Descripción Corta: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"descripcionCorta\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Descripción: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"descripcion\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Imágenes: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"imagenes\"\n                type=\"file\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Categoria: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"categoria\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Precio: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"precio\"\n                type=\"number\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Marca: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"marca\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Número De Parte: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"numeroDeParte\"\n                type=\"number\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Familia: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"familia\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Motor: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"motor\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Proveedor: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"proveedor\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Estatus: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"estatus\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            \n\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.insertar()}\n            >\n              Insertar\n            </Button>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={() => this.cerrarModalInsertar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}